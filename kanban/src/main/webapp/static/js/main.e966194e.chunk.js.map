{"version":3,"sources":["services/auth.ts","services/api.ts","services/index.ts","context/auth.tsx","components/nav.tsx","components/content.tsx","components/create-content.tsx","components/dashboard.tsx","components/create-dashboard.tsx","pages/Dashboard.tsx","pages/login.tsx","pages/register.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["AuthService","url","_token","this","email","password","a","fetch","method","headers","body","JSON","stringify","res","ok","json","data","accessToken","name","ApiService","auth","authorization","token","then","text","dashboardId","contentId","position","srcDashboardId","destDashboardId","authService","apiService","authContext","createContext","login","logout","undefined","AuthProvider","children","useState","setToken","Provider","value","useAuth","useContext","StyledNav","styled","nav","Nav","onClick","ContentStyled","div","props","isDragging","Content","id","index","onDelete","draggableId","provided","snaphshot","ref","innerRef","draggableProps","dragHandleProps","DeleteButton","button","CreateContent","create","useForm","handleSubmit","register","control","StyledForm","onSubmit","setValue","placeholder","defaultValue","required","type","form","DashboardStyled","ContentList","isDraggingOver","Dashboard","contents","createContent","deleteContent","provider","snapshot","length","droppableId","droppableProps","map","content","CreateDashboardStyled","CreateDashboard","onCreate","title","maxLength","StyledApp","Dashboards","dashboards","setDashboards","onDashboardDragEnd","result","destination","moveDashboard","createDashboard","deleteDashboard","onContentDragEnd","source","moveContent","useEffect","getDashboards","getDashboard","onDragEnd","direction","dashboard","creatContent","key","creatDashboard","LoginPage","err","setErr","to","LoginPageStyled","className","LoginFormStyled","ErrMsg","p","RegisterPage","registered","setRegistered","alert","RegisterPageStyled","RegisterFormStyled","Container","App","path","PrivateRoute","rest","render","location","pathname","state","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e966194e.chunk.js","sourcesContent":["export class AuthService {\r\n  private _token: string | undefined;\r\n\r\n  constructor(private readonly url: string) {}\r\n\r\n  get token() {\r\n    return this._token;\r\n  }\r\n\r\n  async login(email: string, password: string): Promise<boolean> {\r\n    const res = await fetch(`${this.url}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    if (res.ok) {\r\n      const data: { accessToken: string } = await res.json();\r\n      this._token = data.accessToken;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async register(email: string, name: string, password: string): Promise<boolean> {\r\n    const res = await fetch(`${this.url}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password, name }),\r\n    });\r\n    return res.ok;\r\n  }\r\n}\r\n","import { Dashboard } from '../models';\r\nimport { AuthService } from './auth';\r\n\r\nexport class ApiService {\r\n  constructor(private readonly url: string, private readonly auth: AuthService) {}\r\n\r\n  getDashboards(): Promise<Dashboard[]> {\r\n    return fetch(this.url, {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  createContent(text: string, dashboardId: string) {\r\n    return fetch(`${this.url}/${dashboardId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n      body: JSON.stringify({ text: text }),\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  createDashboard(name: string) {\r\n    return fetch(`${this.url}/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n      body: JSON.stringify({ name: name }),\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  deleteContent(contentId: string, dashboardId: string) {\r\n    return fetch(`${this.url}/${dashboardId}/${contentId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  deleteDashboard(dashboardId: string) {\r\n    return fetch(`${this.url}/${dashboardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  moveDashboard(dashboardId: string, position: number): Promise<Dashboard[]> {\r\n    return fetch(`${this.url}/${dashboardId}/move`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n      body: JSON.stringify({ position: position }),\r\n    }).then((res) => res.json());\r\n  }\r\n\r\n  moveContent(\r\n    srcDashboardId: string,\r\n    contentId: string,\r\n    destDashboardId: string,\r\n    position: number\r\n  ): Promise<Dashboard[]> {\r\n    return fetch(`${this.url}/${srcDashboardId}/${contentId}/move`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${this.auth.token}`,\r\n      },\r\n      body: JSON.stringify({ position: position, dashboardId: destDashboardId }),\r\n    }).then((res) => res.json());\r\n  }\r\n}\r\n","import { AuthService } from './auth';\r\nimport { ApiService } from './api';\r\n\r\nconst url = 'http://localhost:8080/kanban';\r\nexport const authService = new AuthService(`${url}/api/auth`);\r\nexport const apiService = new ApiService(`${url}/api/backend`, authService);\r\n","import { createContext, FC, useContext, useState } from 'react';\r\nimport { authService } from '../services';\r\n\r\ninterface AuthContext {\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  token: string | undefined;\r\n}\r\n\r\nexport const authContext = createContext<AuthContext>({\r\n  login: async () => {\r\n    return false;\r\n  },\r\n  logout: () => {},\r\n  token: undefined,\r\n});\r\n\r\nexport const AuthProvider: FC = ({ children }) => {\r\n  const [token, setToken] = useState<string>();\r\n  const login = async (email: string, password: string) => {\r\n    const res = await authService.login(email, password);\r\n    if (res) {\r\n      setToken(authService.token);\r\n    }\r\n    return res;\r\n  };\r\n  const logout = () => setToken(undefined);\r\n  return <authContext.Provider value={{ token, login, logout }}>{children}</authContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { useAuth } from '../context/auth';\r\n\r\nconst StyledNav = styled.nav`\r\n  background-color: black;\r\n  color: white;\r\n  height: 60px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  .spacer {\r\n    flex-grow: 1;\r\n  }\r\n  button {\r\n    border: 1px solid rgba(0, 0, 0, 0);\r\n    cursor: pointer;\r\n    &:hover {\r\n      border: 1px solid white;\r\n    }\r\n    background: none;\r\n    color: white;\r\n    padding: 10px;\r\n    font-size: 12pt;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const Nav = () => {\r\n  const { logout } = useAuth();\r\n\r\n  return (\r\n    <StyledNav>\r\n      <p>Lacerba d&d</p>\r\n      <button onClick={logout}>logout</button>\r\n    </StyledNav>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { FC } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst ContentStyled = styled.div<{ isDragging: boolean }>`\r\n  font-size: 12px;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  background-color: ${(props) => (props.isDragging ? 'lightgreen' : 'white')};\r\n  margin: 2px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\ninterface ContentProps {\r\n  text: string;\r\n  id: string;\r\n  index: number;\r\n  onDelete: () => void;\r\n}\r\n\r\nexport const Content: FC<ContentProps> = ({ text, id, index, onDelete }) => {\r\n  return (\r\n    <div>\r\n      <Draggable draggableId={id} index={index}>\r\n        {(provided, snaphshot) => (\r\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n            <ContentStyled isDragging={snaphshot.isDragging}>\r\n              <span>{text}</span>\r\n              <DeleteButton onClick={onDelete}> x </DeleteButton>\r\n            </ContentStyled>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: #ff4d4d;\r\n  color: white;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 5px;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: grid;\r\n  place-content: center;\r\n  margin: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    background-color: #ff1414;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport const CreateContent: FC<{ create: (text: string) => void }> = ({ create }) => {\r\n  const { handleSubmit, register, control } = useForm<{ name: string }>();\r\n  const onSubmit = (data: { name: string }) => {\r\n    create(data.name);\r\n    control.setValue('name', '');\r\n  };\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\r\n      <input name=\"name\" placeholder=\"crea contenuto\" defaultValue=\"\" ref={register({ required: true })} />\r\n      <input type=\"submit\" />\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nconst StyledForm = styled.form`\r\n  padding: 10px;\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { FC } from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { Content } from './content';\r\nimport { CreateContent } from './create-content';\r\n\r\nconst DashboardStyled = styled.div`\r\n  width: 220px;\r\n  height: 100%;\r\n  min-height: 400px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  overflow-y: scroll;\r\n  flex-grow: 1;\r\n  h2 {\r\n    margin: 0;\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid #ccc;\r\n    font-size: 15px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst ContentList = styled.div<{ isDraggingOver: boolean }>`\r\n  background-color: ${(props) => (props.isDraggingOver ? 'lightblue' : 'white')};\r\n  height: 100%;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n`;\r\n\r\ninterface DashboardProps {\r\n  id: string;\r\n  name: string;\r\n  index: number;\r\n  contents: { text: string; id: string }[];\r\n  createContent: (name: string) => void;\r\n  deleteContent: (id: string) => void;\r\n  onDelete: () => void;\r\n}\r\n\r\nexport const Dashboard: FC<DashboardProps> = ({\r\n  id,\r\n  name,\r\n  contents,\r\n  index,\r\n  createContent,\r\n  deleteContent,\r\n  onDelete,\r\n}) => {\r\n  return (\r\n    <Draggable draggableId={id} index={index}>\r\n      {(provider, snapshot) => (\r\n        <DashboardStyled {...provider.draggableProps} ref={provider.innerRef}>\r\n          <h2 {...provider.dragHandleProps}>{name}</h2>\r\n          {contents.length === 0 && <DeleteButton onClick={onDelete}>Delete</DeleteButton>}\r\n          <Droppable droppableId={id} type=\"content\">\r\n            {(provider, snapshot) => (\r\n              <ContentList\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n                ref={provider.innerRef}\r\n                {...provider.droppableProps}\r\n              >\r\n                {contents.map((content, index) => (\r\n                  <Content\r\n                    onDelete={() => deleteContent(content.id)}\r\n                    key={content.id}\r\n                    id={content.id}\r\n                    index={index}\r\n                    text={content.text}\r\n                  />\r\n                ))}\r\n                {provider.placeholder}\r\n              </ContentList>\r\n            )}\r\n          </Droppable>\r\n\r\n          <CreateContent create={createContent} />\r\n        </DashboardStyled>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst DeleteButton = styled.button`\r\n  margin: 2px;\r\n  background-color: #ff4d4d;\r\n  color: white;\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 5px;\r\n  &:hover {\r\n    background-color: #ff1414;\r\n  }\r\n`;\r\n","import { FC } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst CreateDashboardStyled = styled.div``;\r\n\r\ninterface CreateDashboardProps {\r\n  onCreate: (title: string) => void;\r\n}\r\n\r\ninterface CreateDashboardFormData {\r\n  title: string;\r\n}\r\n\r\nexport const CreateDashboard: FC<CreateDashboardProps> = ({ onCreate }) => {\r\n  const { register, handleSubmit, control } = useForm<CreateDashboardFormData>();\r\n  const onSubmit = (data: CreateDashboardFormData) => {\r\n    onCreate(data.title);\r\n    control.setValue('title', '');\r\n  };\r\n\r\n  return (\r\n    <CreateDashboardStyled>\r\n      <h2>Crea Dashboard</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input name=\"title\" ref={register({ required: true, maxLength: 20 })} />\r\n        <button type=\"submit\"> Crea </button>\r\n      </form>\r\n    </CreateDashboardStyled>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { Dashboard } from '../components/dashboard';\r\nimport { Dashboard as DashboardModel } from '../models';\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\r\nimport { useEffect, useState } from 'react';\r\nimport { apiService } from '../services';\r\nimport { CreateDashboard } from '../components/create-dashboard';\r\n\r\nconst StyledApp = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  min-width: 400px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport function Dashboards() {\r\n  const [dashboards, setDashboards] = useState<DashboardModel[]>([]);\r\n  useEffect(() => {\r\n    async function getDashboard() {\r\n      const dashboards = await apiService.getDashboards();\r\n      setDashboards(dashboards);\r\n    }\r\n    getDashboard();\r\n  }, []);\r\n\r\n  async function onDashboardDragEnd(result: DropResult) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const position = result.destination.index;\r\n    const dashboardId = result.draggableId;\r\n    const dashboards = await apiService.moveDashboard(dashboardId, position);\r\n    setDashboards(dashboards);\r\n  }\r\n\r\n  async function creatContent(name: string, dashboardId: string) {\r\n    const dashboards = await apiService.createContent(name, dashboardId);\r\n    setDashboards(dashboards);\r\n  }\r\n\r\n  async function creatDashboard(name: string) {\r\n    const dashboards = await apiService.createDashboard(name);\r\n    setDashboards(dashboards);\r\n  }\r\n\r\n  async function deleteContent(contentId: string, dashboardId: string) {\r\n    const dashboards = await apiService.deleteContent(contentId, dashboardId);\r\n    setDashboards(dashboards);\r\n  }\r\n\r\n  async function deleteDashboard(dashboardId: string) {\r\n    const dashboards = await apiService.deleteDashboard(dashboardId);\r\n    setDashboards(dashboards);\r\n  }\r\n\r\n  async function onContentDragEnd(result: DropResult) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    const srcDashboardId = result.source.droppableId;\r\n    const contentId = result.draggableId;\r\n    const destDashboardId = result.destination.droppableId;\r\n    const position = result.destination.index;\r\n    const dashboards = await apiService.moveContent(srcDashboardId, contentId, destDashboardId, position);\r\n    setDashboards(dashboards);\r\n  }\r\n\r\n  async function onDragEnd(result: DropResult) {\r\n    const type = result.type;\r\n    if (type === 'DASHBOARD') {\r\n      await onDashboardDragEnd(result);\r\n    } else if (type === 'content') {\r\n      await onContentDragEnd(result);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"list\" direction=\"horizontal\" type=\"DASHBOARD\">\r\n        {(provided) => (\r\n          <StyledApp ref={provided.innerRef} {...provided.droppableProps}>\r\n            {dashboards.map((dashboard, index) => (\r\n              <Dashboard\r\n                deleteContent={(contentId) => deleteContent(contentId, dashboard.id)}\r\n                createContent={(name: string) => creatContent(name, dashboard.id)}\r\n                onDelete={() => deleteDashboard(dashboard.id)}\r\n                index={index}\r\n                {...dashboard}\r\n                key={dashboard.id}\r\n              />\r\n            ))}\r\n            {provided.placeholder}\r\n            <CreateDashboard onCreate={(name) => creatDashboard(name)} />\r\n          </StyledApp>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { useAuth } from '../context/auth';\r\nimport { authService } from '../services';\r\n\r\ninterface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const LoginPage = () => {\r\n  const [err, setErr] = useState<boolean>(false);\r\n  const { token, login } = useAuth();\r\n  const { handleSubmit, register } = useForm<{ name: string }>();\r\n  const onSubmit = async (data: LoginData) => {\r\n    setErr(false);\r\n    const res = await login(data.email, data.password);\r\n    setErr(!res);\r\n  };\r\n  if (token) {\r\n    return <Redirect to=\"./\" />;\r\n  }\r\n  return (\r\n    <LoginPageStyled>\r\n      <div className=\"login\">\r\n        <h1> Login User</h1>\r\n        <LoginFormStyled onSubmit={handleSubmit(onSubmit)}>\r\n          <input name=\"email\" type=\"email\" placeholder=\"email\" defaultValue=\"\" ref={register({ required: true })} />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            defaultValue=\"\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {err && <ErrMsg>Invalid login</ErrMsg>}\r\n          <button type=\"submit\"> Login</button>\r\n\r\n          <Link to=\"./register\"> Register </Link>\r\n        </LoginFormStyled>\r\n      </div>\r\n    </LoginPageStyled>\r\n  );\r\n};\r\n\r\nconst ErrMsg = styled.p`\r\n  color: red;\r\n`;\r\n\r\nconst LoginFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  gap: 10px;\r\n  input {\r\n    height: 30px;\r\n    padding: 0 10px;\r\n  }\r\n  button {\r\n    background: #4ad2ff;\r\n    height: 30px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #06baf6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoginPageStyled = styled.div`\r\n  display: grid;\r\n  place-content: center;\r\n  .login {\r\n    border: 1px solid black;\r\n    margin-top: 20px;\r\n    padding: 20px;\r\n    max-width: 90%;\r\n    width: 800px;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { useAuth } from '../context/auth';\r\nimport { authService } from '../services';\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n}\r\n\r\nexport const RegisterPage = () => {\r\n  const [err, setErr] = useState<boolean>(false);\r\n  const [registered, setRegistered] = useState<boolean>(false);\r\n  const { token } = useAuth();\r\n  const { handleSubmit, register } = useForm<{ name: string }>();\r\n  const onSubmit = async (data: RegisterData) => {\r\n    setErr(false);\r\n    const res = await authService.register(data.email, data.name, data.password);\r\n    setErr(!res);\r\n    if (res) {\r\n      setRegistered(true);\r\n    }\r\n  };\r\n  if (token) {\r\n    return <Redirect to=\"./\" />;\r\n  }\r\n  if (registered) {\r\n    alert('Registazione completata con successo. Vai al login per accedere');\r\n    return <Redirect to=\"./login\" />;\r\n  }\r\n\r\n  return (\r\n    <RegisterPageStyled>\r\n      <div className=\"login\">\r\n        <h1> Register User</h1>\r\n        <RegisterFormStyled onSubmit={handleSubmit(onSubmit)}>\r\n          <input name=\"name\" type=\"name\" placeholder=\"name\" defaultValue=\"\" ref={register({ required: true })} />\r\n          <input name=\"email\" type=\"email\" placeholder=\"email\" defaultValue=\"\" ref={register({ required: true })} />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            defaultValue=\"\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {err && <ErrMsg>Invalid register</ErrMsg>}\r\n          <button type=\"submit\"> Register </button>\r\n\r\n          <Link to=\"./login\"> Login </Link>\r\n        </RegisterFormStyled>\r\n      </div>\r\n    </RegisterPageStyled>\r\n  );\r\n};\r\n\r\nconst ErrMsg = styled.p`\r\n  color: red;\r\n`;\r\n\r\nconst RegisterFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  gap: 10px;\r\n  input {\r\n    height: 30px;\r\n    padding: 0 10px;\r\n  }\r\n  button {\r\n    background: #4ad2ff;\r\n    height: 30px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #06baf6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RegisterPageStyled = styled.div`\r\n  display: grid;\r\n  place-content: center;\r\n  .login {\r\n    border: 1px solid black;\r\n    margin-top: 20px;\r\n    padding: 20px;\r\n    max-width: 90%;\r\n    width: 800px;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Nav } from './components/nav';\r\nimport { Dashboards } from './pages/Dashboard';\r\nimport { LoginPage } from './pages/login';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from './context/auth';\r\nimport { FC } from 'react';\r\nimport { RegisterPage } from './pages/register';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/kanban/login\">\r\n          <LoginPage />\r\n        </Route>\r\n\r\n        <Route path=\"/kanban/register\">\r\n          <RegisterPage />\r\n        </Route>\r\n        <PrivateRoute path=\"/kanban/\">\r\n          <Nav />\r\n          <Container>\r\n            <Dashboards />\r\n          </Container>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nconst PrivateRoute: FC<any> = ({ children, ...rest }) => {\r\n  let auth = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.token ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/kanban/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AuthProvider } from './context/auth';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}